package analizadores.json;

import java_cup.runtime.Symbol;
import errores.ErrorSintactico;
import java.util.HashMap;
import java.util.Map;
import java.util.LinkedList;

parser code {:
    public Map<String, String> simbolos = new HashMap<>();
    public LinkedList<ErrorSintactico> errores = new LinkedList<>();
    public void error_sintactico(Symbol s) {
        if (s.value != null)
            errores.add(new ErrorSintactico(s.value.toString(), s.left, s.right));
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
                throw new Exception("Error irrecuperable en (linea, columna): " + s.left + ", " + s.right);
    }
:}

terminal String COMA, DOS_PUNTOS;
terminal String  LLAVE_START, LLAVE_END;
terminal String NUM, STR;

non terminal ini;
non terminal pares, par;

start with ini;

ini ::= LLAVE_START pares:s LLAVE_END;

pares ::= pares COMA par:p
        | par:p;

par ::= STR:s DOS_PUNTOS NUM:n {:simbolos.put(utilidades.Utils.strs(s), n);:}
      | STR:s DOS_PUNTOS STR:n {:simbolos.put(utilidades.Utils.strs(s), utilidades.Utils.strs(n));:};
